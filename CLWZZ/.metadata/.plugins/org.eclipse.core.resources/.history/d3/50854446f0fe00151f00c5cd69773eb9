package one;

import java.math.BigInteger;


public class P39_2_21 {
	/**
	 * 众数问题：
	 * 		给定含有n个元素集合s,每个元素在s中出现的次数，为该元素的重数，多重数重数最大的元素
	 * 为众数。
	 * @param args
	 */

	private static int count = 1;
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[] arr = {1,2,2,2,2,3,5};
		P39_2_21 p39_2_21 = new P39_2_21();
		
		int[] h = new int[count];
		int[] d = new int[count];
		for (int i = 0; i < d.length; i++) {
			d[i] = 0;
		}
		h = p39_2_21.zhongshu(arr);
		for (int i = 0; i < h.length; i++) {
			for (int j = 0; j < arr.length; j++) {
				if(h[i] == arr[j]){
					d[i]++;
				}
			}
		}
		for (int i = 0; i < d.length; i++) {
			System.out.printf("%d\t%d\n",h[i],d[i]);
		}
		
	}
	public int[] zhongshu(int[] arr){
		
		int[] a = new int[100];
		a[0] = arr[0];
		
		for (int i = 0; i < arr.length; i++) {
			int temp = 0;
			for (int j = 0; j < count; j++) {
				if(arr[i] == a[j])
					temp = 1;
			}
			if(temp == 0){
				a[count] = arr[i];
				count++;
			}
		}
		return a;
	}
	
}
